<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Avenue extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Avenue_model');
    } 

    /*
     * Listing of avenues
     */
    function index()
    {
        $params['limit'] = RECORDS_PER_PAGE; 
        $params['offset'] = ($this->input->get('per_page')) ? $this->input->get('per_page') : 0;
        
        $config = $this->config->item('pagination');
        $config['base_url'] = site_url('avenue/index?');
        $config['total_rows'] = $this->Avenue_model->get_all_avenues_count();
        $this->pagination->initialize($config);

        $data['avenues'] = $this->Avenue_model->get_all_avenues($params);
        
        $data['_view'] = 'avenue/index';
        $this->load->view('layouts/main',$data);
    }

    /*
     * Adding a new avenue
     */
    function add()
    {   
        $this->load->library('form_validation');

		$this->form_validation->set_rules('cellule_sid','Cellule Sid','required');
		$this->form_validation->set_rules('nomAvenue','NomAvenue','required');
		
		if($this->form_validation->run())     
        {   
            $params = array(
				'cellule_sid' => $this->input->post('cellule_sid'),
				'nomAvenue' => $this->input->post('nomAvenue'),
				'nomChefAvenue' => $this->input->post('nomChefAvenue'),
				'telephoneChefAvenue' => $this->input->post('telephoneChefAvenue'),
				'nombreMaisons' => $this->input->post('nombreMaisons'),
				'date_created' => $this->input->post('date_created'),
				'last_update' => $this->input->post('last_update'),
				'adresseChefAvenue' => $this->input->post('adresseChefAvenue'),
            );
            
            $avenue_id = $this->Avenue_model->add_avenue($params);
            redirect('avenue/index');
        }
        else
        {
			$this->load->model('Cellule_model');
			$data['all_cellules'] = $this->Cellule_model->get_all_cellules();
            
            $data['_view'] = 'avenue/add';
            $this->load->view('layouts/main',$data);
        }
    }  

    /*
     * Editing a avenue
     */
    function edit($avenue_id)
    {   
        // check if the avenue exists before trying to edit it
        $data['avenue'] = $this->Avenue_model->get_avenue($avenue_id);
        
        if(isset($data['avenue']['avenue_id']))
        {
            $this->load->library('form_validation');

			$this->form_validation->set_rules('cellule_sid','Cellule Sid','required');
			$this->form_validation->set_rules('nomAvenue','NomAvenue','required');
		
			if($this->form_validation->run())     
            {   
                $params = array(
					'cellule_sid' => $this->input->post('cellule_sid'),
					'nomAvenue' => $this->input->post('nomAvenue'),
					'nomChefAvenue' => $this->input->post('nomChefAvenue'),
					'telephoneChefAvenue' => $this->input->post('telephoneChefAvenue'),
					'nombreMaisons' => $this->input->post('nombreMaisons'),
					'date_created' => $this->input->post('date_created'),
					'last_update' => $this->input->post('last_update'),
					'adresseChefAvenue' => $this->input->post('adresseChefAvenue'),
                );

                $this->Avenue_model->update_avenue($avenue_id,$params);            
                redirect('avenue/index');
            }
            else
            {
				$this->load->model('Cellule_model');
				$data['all_cellules'] = $this->Cellule_model->get_all_cellules();

                $data['_view'] = 'avenue/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The avenue you are trying to edit does not exist.');
    } 

    /*
     * Deleting avenue
     */
    function remove($avenue_id)
    {
        $avenue = $this->Avenue_model->get_avenue($avenue_id);

        // check if the avenue exists before trying to delete it
        if(isset($avenue['avenue_id']))
        {
            $this->Avenue_model->delete_avenue($avenue_id);
            redirect('avenue/index');
        }
        else
            show_error('The avenue you are trying to delete does not exist.');
    }
    
}
